(*
Lodestone
=========

The pinscreen file holds functions and procedures that are used in the
Runescape lodestone-teleport screen.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/lodestone.simba>`_.

*)

{$f-}

(*
const Locations
~~~~~~~~~~~~~~~

All possible locations to teleport on the lodestone network.

Example:

.. code-block:: pascal

    lodestoneScreen.teleportTo(LOCATION_LUNAR_ISLE);

*)
const
  LOCATION_LUNAR_ISLE      = 0;
  LOCATION_EAGLES_PEAK     = 1;
  LOCATION_TIRANNWN        = 2;
  LOCATION_FREMENNIK       = 3;
  LOCATION_SEERS_VILLAGE   = 4;
  LOCATION_ARDOUGNE        = 5;
  LOCATION_YANILLE         = 6;
  LOCATION_OOGLOG          = 7;
  LOCATION_BURTHORPE       = 8;
  LOCATION_CATHERBY        = 9;
  LOCATION_TRAVERLEY       = 10;
  LOCATION_KARAMJA         = 11;
  LOCATION_WILDERNESS      = 12;
  LOCATION_EDGEVILLE       = 13;
  LOCATION_FALADOR         = 14;
  LOCATION_PORT_SARIM      = 15;
  LOCATION_VARROCK         = 16;
  LOCATION_DRAYNOR_VILLAGE = 17;
  LOCATION_LUMBRIDGE       = 18;
  LOCATION_BANDIT_CAMP     = 19;
  LOCATION_AL_KHARID       = 20;
  LOCATION_CANIFIS         = 21;
  LOCATION_ASHDALE         = 22;
  LOCATION_PREVIOUS        = 1337;

(*
type TRSLodestoneScreen
~~~~~~~~~~~~~~~~~~~~~~~~

A type that stores the lodestone interface properties.
*)
type
  TRSLodestoneScreen = type TRSInterface;

(*
var lodestoneScreen
~~~~~~~~~~~~~~~~~~~~

Variable that stores functions and properties of the Runescape lodestone interface.

Example:

.. code-block:: pascal

    if (lodestoneScreen.isOpen() then
      writeln('Lodestone screen is open!');
*)
var
  lodestoneScreen: TRSLodestoneScreen;

{*
TRSLodestoneScreen.__init
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSLodestoneScreen.__init();

Initializes the TRSLodestoneScreen.

.. note::

    - by Olly
    - Last Updated: 16 November 2013 by Olly

Example:

.. code-block:: pascal

    TRSLodestoneScreen.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSLodestoneScreen.__init();
begin
  with (self) do
  begin
    name := 'RS Production Screen';
    ID := ID_INTERFACE_LODESTONE;
    parentID := -1;
    static := false;
  end;
end;
{$ENDIF}

(*
TRSLodestoneScreen.__find
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLodestoneScreen.__find(): boolean;

Returns true if the lodestone screen is detected, and sets the bounds

.. note::

    - by Ashaman88
    - Last Updated: 27 February 2014 by Ashaman88

Example:

.. code-block:: pascal

    if (LodestoneScreen.__find()) then
      writeln('bounds are set!');
*)
function TRSLodestoneScreen.__find(): boolean;
const
  TOP_COLOR = 1118779;    //red color behind lodestone
  MENU_LENGTH = 768;      //length of large red background
  MENU_OFFSET_COLOR = 6385013; //p2p offset color on map
  MENU_OFFSET_COLOR_FTP = 6513233;  //f2p offset color on map
var
  tpa : TPointArray;
  atpa : T2DPointArray;
  i, hh: integer;
  b: TBox;
begin
  result := false;

  if (not findColors(tpa, TOP_COLOR, getClientBounds())) then
    exit();

  atpa := tpa.cluster(5);
  hh := high(atpa);

  for i := 0 to hh do
    if (length(atpa[i]) = MENU_LENGTH) then
    begin
      b := getTPABounds(atpa[i]);

      if (getColor(b.x2, b.y2 + 5) = MENU_OFFSET_COLOR) or (getColor(b.x2, b.y2 + 5) = MENU_OFFSET_COLOR_FTP) then
      begin
        self.setBounds([b.x1 - 15, b.y1 - 2, b.x2 + 310, b.y2 + 300]);
        exit(true);
      end;
    end;
end;

(*
TRSLodestoneScreen.isOpen
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLodestoneScreen.isOpen(waitTime: integer = 0): boolean;

Returns true if the lodestone sceen is open, has a optional parameter 'waitTime'
which is the max time of how long we will wait for the screen to appear.

.. note::

    - by Olly
    - Last Updated: 16 November 2013 by Olly

Example:

.. code-block:: pascal

    if (lodestoneScreen.isOpen() then
      writeln('Lodestone screen is open!');
*)
function TRSLodestoneScreen.isOpen(waitTime: integer = 0): boolean;
var
  t, cts: integer;
begin
  t := (getSystemTime() + waitTime);

  cts := getToleranceSpeed();
  setColorToleranceSpeed(1);

  repeat
    result := self.__find();
    wait(20 + random(20));
  until (getSystemTime() >= t) or (result);

  setColorToleranceSpeed(cts);
end;

(*
TRSLodestoneScreen.close
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLodestoneScreen.close(): boolean;

Closes the lodestone screen.

.. note::

    - by Olly
    - Last Updated: 16 November 2013 by Olly

Example:

.. code-block:: pascal

    lodestoneScreen.close();
*)
function TRSLodestoneScreen.close(): boolean;
var
  t: longWord;
begin
  result := false;
  t := (getSystemTime() + randomRange(6000, 8000));

  if (self.isOpen()) then
  begin
    mouseCircle(self.x2 - 9, self.y1 + 7, 3, MOUSE_LEFT);

    while (t > getSystemTime()) do
    begin
      if (not self.isOpen()) then
      begin
        result := true;
        break;
      end;

      wait(50 + random(50));
    end;
  end else
    result := true;

  if (result) then
    print('TRSLodestoneScreen.close(): Closed lodestone screen', TDebug.SUB)
  else
    print('TRSLodestoneScreen.close(): Failed to close lodestone screen', TDebug.WARNING);
end;

{*
TRSLodestoneScreen._isLocationVaild
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLodestoneScreen._isLocationVaild(location: integer): boolean;

Returns true if the location is vaild.

.. note::

    - by Olly
    - Last Updated: 16 November 2013 by Olly

Example:

.. code-block:: pascal

    if (lodestoneScreen._isLocationVaild(LOCATION_LUNAR_ISLE)) then
      writeln('vaild.');
*}
function TRSLodestoneScreen._isLocationVaild(location: integer): boolean;
begin
  result := inRange(location, LOCATION_LUNAR_ISLE, LOCATION_ASHDALE);

  if (not result) then
    print('TRSLodestoneScreen._isLocationVaild(): Location isn''t vaild!');
end;

{*
TRSLodestoneScreen._getTeleportBox
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLodestoneScreen._getTeleportBox(location: integer): TBox;

Returns the TBox of the location.

.. note::

    - by Olly
    - Last Updated: 16 November 2013 by Olly

Example:

.. code-block:: pascal

    b := lodestoneScreen._getTeleportBox(LOCATION_CANIFIS);
*}
function TRSLodestoneScreen._getTeleportBox(location: integer): TBox;
const
  pnts: TPointArray = [[30, 48], [98, 117], [75, 194], [187, 53], [169, 100], [160, 144], [151, 209], [143, 262], [243, 87], [202, 130], [234, 124], [202, 198], [302, 60], [285, 99], [265, 146], [266, 188], [340, 131], [303, 162], [314, 199], [314, 243], [355, 193], [397, 105], [88, 298]];
var
  p: TPoint;
begin
  result := [-1, -1, -1, -1];

  if (self._isLocationVaild(location)) then
  begin
    p := pnts[location];
    p.offset([self.x1, self.y1]);

    result := [p.x -8, p.y -8, p.x +8, p.y +8];
  end;
end;

(*
TRSLodestoneScreen.teleportTo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLodestoneScreen.teleportTo(location: integer): boolean;

Will teleport to location 'location'. Use integer constants at the top of the file.

.. note::

    - by Olly
    - Last Updated: 16 November 2013 by Olly

Example:

.. code-block:: pascal

    if (lodestoneScreen.isOpen() then
      writeln('Lodestone screen is open!');
*)
function TRSLodestoneScreen.teleportTo(location: integer): boolean;
var
  b: TBox;
begin
  result := false;

  if (not self.isOpen()) then
  begin
    mouseCircle(minimap.button[MM_BUTTON_LODESTONE].center.x, minimap.button[MM_BUTTON_LODESTONE].center.y,
                minimap.button[MM_BUTTON_LODESTONE].radius, MOUSE_MOVE);

    if (location = LOCATION_PREVIOUS) then
    begin
      fastclick(MOUSE_RIGHT);
      result := chooseOption.select(['Previous dest', 'estination', 'evious']);

      if (result) then
        print('TRSLodestoneScreen.teleportTo(): Succesfully teleported to previous destination', TDebug.SUB)
      else
        print('TRSLodestoneScreen.teleportTo(): Failed teleport to previous destination (ChooseOption must have failed)', TDebug.SUB);

      exit();
    end;
  end;

  if (not self.isOpen()) then
    fastClick(MOUSE_LEFT);

  if (self.isOpen(5000)) then
  begin
    b := self._getTeleportBox(location);

    if (b.x1 <> -1) then
    begin
      mouseBox(b, MOUSE_LEFT);
      result := true;

      print('TRSLodestoneScreen.teleportTo(): result = true', TDebug.SUB);
    end;
  end else
    print('TRSLodestoneScreen.teleportTo(): lodestone screen never appeared', TDebug.ERROR);
end;

begin
  lodestoneScreen.__init();
end;

{$f+}
