(*
Chatbox
=======

The chatbox file holds functions and procedures that are used in the
Runescape chat box.

The source for this file can be found
`here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/chatbox.simba>`_.

*)

{$f-}

(*
type TRSChatbox
~~~~~~~~~~~~~~~

A type that stores functions and properties of the Runescape chat box interface.
*)
type
  TRSChatbox = record(TRSInterface)
    lineBoxes: TBoxArray;
  end;

(*
var chatbox
~~~~~~~~~~~

Variable that stores functions and properties of the Runescape chatbox interface.
*)
var
  chatbox: TRSChatbox;

const
  CHATBOX_TESSERACT_FILTER: TTesseractFilter = [3, 3, [false, 35, TM_Mean]];

{*
TRSChatbox.__init
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSChatbox.__init();

Initiates the chatbox variable.

.. note::

    - by Coh3n
    - Last Updated: 08 August 2013 by Coh3n

Example:

.. code-block:: pascal

    chatbox.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSChatbox.__init();
begin
  with self do
  begin
    name := 'RS Chat Box';
    ID := ID_INTERFACE_CHAT_BOX;
    parentID := -1;
    static := false;
  end;
end;
{$ENDIF}

{*
TRSChatbox.__setup
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSChatbox.__setup();

Sets up the chat box variables.

.. note::

    - by Olly
    - Last Updated: 17 October 2013 by Olly

Example:

.. code-block:: pascal

    chatbox.__setup();
*}
procedure TRSChatbox.__setup();
var
  b, chatBounds: TBox;
  wid, hei, i: integer;
  p: TPoint;
begin
  setLength(self.lineBoxes, 0);
  getClientDimensions(wid, hei);

  self.setBounds([1, actionBar.y2, gameTabs.tabArea.x1, hei-2]);
  setLength(lineBoxes, 0);

  chatBounds := chatBox.getChatArea();

  for i := 0 to 10 do
  begin
    p.y := 568 - (i * 14);
    b := [chatBounds.x1, p.y-9, chatBounds.x2, p.y+9];

    if (b.y1 < chatBox.getChatArea().y1) then
      break();

    insert(b, self.lineBoxes, high(self.lineBoxes)+1);
  end;
end;

(*
TRSChatbox.getChatArea
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSChatbox.getChatArea(): TBox;

Returns a TBox of the chat box area.

.. note::

    - by Olly
    - Last Updated: 17 October 2013 by Olly

Example:

.. code-block:: pascal

    area := chatbox.getCharArea();
*)
function TRSChatbox.getChatArea(): TBox;
begin
  result := intToBox(self.x1+3, self.y1 + 68, self.x2-20, self.y2-22);
end;

(*
TRSChatbox.findAnyText
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSChatbox.findAnyText(txt: TStringArray): boolean;

Initiates the chatbox variable.

.. note::

    - by Olly
    - Last Updated: 17 October 2013 by Olly

Example:

.. code-block:: pascal

    chatbox.findAnyText(['Hello']);
*)
function TRSChatbox.findAnyText(txt: TStringArray): boolean;
var
  s: string;
begin
  s := Tesseract_GetText(chatBox.getChatArea(), CHATBOX_TESSERACT_FILTER);

  if (length(s) > 1) then
    result := IsArrInStr(txt, s);
end;

(*
TRSChatbox.findTextOnLines
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSChatbox.findTextOnLines(txt: TStringArray; lines: TIntegerArray): boolean;

Returns true if the text in 'txt' is found on the 'lines' of the chatbox.  The
lines start with 0 being the bottom chat line.

.. note::

    - by Olly
    - Last Updated: 17 October 2013 by Olly

Example:

.. code-block:: pascal

    // returns true if "Hello" is found on the first 4 lines
    chatbox.findTextOnLines(['Hello'], [0..3]);
*)
function TRSChatbox.findTextOnLines(txt: TStringArray; lines: TIntegerArray): boolean;
var
  i: integer;
  s: string;
  b: TBox;
begin
  result := false;

  for i := 0 to high(lines) do
  begin
    b := lineBoxes[i];

    s := Tesseract_GetText(intToBox(b.x1, b.y1 + 2, b.x2, b.y2 - 2), CHATBOX_TESSERACT_FILTER);

    if (IsArrInStr(txt, s)) then
    begin
      print('TRSChatBox.findTextOnLines(): Found text '+toStr(txt)+' on line '+intToStr(lines[i]));
      exit(true);
    end;
  end;
end;

begin
  chatbox.__init();
end;

{$f+}
